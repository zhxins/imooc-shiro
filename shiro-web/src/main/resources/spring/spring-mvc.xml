<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	default-lazy-init="true"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<tx:annotation-driven />
	<context:component-scan base-package="com.imooc.service">
	      <context:include-filter type="regex" expression=".service.*"/>
	</context:component-scan>
	<context:component-scan base-package="com.imooc.controller" />

	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<context:component-scan base-package="com.imooc.task" />
	<!-- 初始化数据 -->
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
	       <property name ="locations">
	           <list>
	                <value>
					/spring/config.properties
					</value>
	           </list>
	       </property>
	       <property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	
	<!-- 启动对@AspectJ注解的支持 -->
	<!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller-->  
<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 注解支持 -->  
<context:annotation-config/> 
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
                <value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 采用SpringMVC自带的JSON转换工具，支持@ResponseBody注解 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
			    <!-- 把ByteArray加在Json前面 springmvc 下载文件使用-->  
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>  
				<ref bean="mappingJackson2HttpMessageConverter" />    <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<mvc:annotation-driven>
		<!-- 处理responseBody 里面日期类型 -->
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
    <import resource="spring-mvc-shiro.xml"/>
    
	<!-- 隐式地向 Spring 容器注册 -->
	<context:annotation-config />

	<!--开启这个配置，spring才能识别@Scheduled注解   -->  
   <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>  
   <task:scheduler id="qbScheduler" pool-size="10"/>

	<!-- 定时器 -->
   <!--<task:scheduled-tasks scheduler="qbScheduler">        -->
<!--&lt;!&ndash;         <task:scheduled ref="hkwsPost" method="hkwsPost" cron="${vip.cron}"/>  &ndash;&gt;-->
        <!--&lt;!&ndash;<task:scheduled ref="vipInfoPost" method="vipInfoPost" cron="${hkwsPost.cron}"/> &ndash;&gt;-->
        <!---->
    <!--</task:scheduled-tasks>-->
    
</beans>